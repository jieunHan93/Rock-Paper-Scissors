{"version":3,"sources":["components/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Wapper","Title","Description","FocusText","CountArea","CountBox","CountTitle","CountNumber","Counter","useState","rocNumber","changeRocNumber","sicNumber","changeSicNumber","papNumber","changePapNumber","onIncrease","useCallback","event","type","prevNumber","reset","onKeyDown","keyCode","useEffect","window","addEventListener","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"smDAGA,IAAMA,EAAYC,IAAOC,IAAV,KAKTC,EAASF,IAAOC,IAAV,KASNE,EAAQH,IAAOC,IAAV,KASLG,EAAcJ,IAAOC,IAAV,KAaXI,EAAYL,IAAOC,IAAV,KAITK,EAAYN,IAAOC,IAAV,KAQTM,EAAWP,IAAOC,IAAV,KAeRO,EAAaR,IAAOC,IAAV,KAIVQ,EAAcT,IAAOC,IAAV,KA+DFS,EA7DC,WAAO,IAAD,EACiBC,mBAAS,GAD1B,mBACbC,EADa,KACFC,EADE,OAEiBF,mBAAS,GAF1B,mBAEbG,EAFa,KAEFC,EAFE,OAGiBJ,mBAAS,GAH1B,mBAGbK,EAHa,KAGFC,EAHE,KAKdC,EAAaC,uBAAY,SAACC,EAAOC,GAC5B,SAATA,GAAmBR,GAAgB,SAACS,GAAD,OAAgBA,EAAa,KACvD,aAATD,GAAuBN,GAAgB,SAACO,GAAD,OAAgBA,EAAa,KAC3D,UAATD,GAAoBJ,GAAgB,SAACK,GAAD,OAAgBA,EAAa,OAChE,IAEGC,EAAQJ,uBAAY,SAACC,GACzBP,EAAgB,GAChBE,EAAgB,GAChBE,EAAgB,KACf,IAGGO,EAAYL,uBAChB,SAACC,EAAOC,GACN,OAAsB,KAAlBD,EAAMK,QAAuBP,EAAWE,EAAO,QAC7B,KAAlBA,EAAMK,QAAuBP,EAAWE,EAAO,YAC7B,KAAlBA,EAAMK,QAAuBP,EAAWE,EAAO,SAE7B,KAAlBA,EAAMK,QAAuBF,EAAMH,QAAvC,IAEF,CAACF,EAAYK,IAOf,OALAG,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWJ,GAC5B,kBAAMG,OAAOE,oBAAoB,UAAWL,MAClD,CAACA,IAGF,cAACzB,EAAD,UACE,eAACG,EAAD,WACE,cAACC,EAAD,4EACA,eAACC,EAAD,0BACI,cAACC,EAAD,qBADJ,eAEI,cAACA,EAAD,qBAFJ,gBAGK,cAACA,EAAD,qBAHL,wFAKA,eAACC,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,qBACA,eAACC,EAAD,0DAAuBG,QAEzB,eAACL,EAAD,WACE,cAACC,EAAD,qBACA,eAACC,EAAD,0DAAuBK,QAEzB,eAACP,EAAD,WACE,cAACC,EAAD,qBACA,eAACC,EAAD,0DAAuBO,iBCtHpBc,EAJH,WACV,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9637137a.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Wapper = styled.div`\r\n  padding: 2rem;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  justify-content: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-family: \"Roboto\";\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  margin: 8px 0;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-family: \"Noto Sans KR\";\r\n  font-size: 18px;\r\n`;\r\n\r\nconst FocusText = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst CountArea = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CountBox = styled.div`\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  margin-right: 5px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-family: \"Noto Sans KR\";\r\n  font-size: 20px;\r\n\r\n  border: 1px solid lightgray;\r\n`;\r\n\r\nconst CountTitle = styled.div`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst CountNumber = styled.div``;\r\n\r\nconst Counter = () => {\r\n  const [rocNumber, changeRocNumber] = useState(3);\r\n  const [sicNumber, changeSicNumber] = useState(3);\r\n  const [papNumber, changePapNumber] = useState(3);\r\n\r\n  const onIncrease = useCallback((event, type) => {\r\n    type === \"rock\" && changeRocNumber((prevNumber) => prevNumber - 1);\r\n    type === \"scissors\" && changeSicNumber((prevNumber) => prevNumber - 1);\r\n    type === \"paper\" && changePapNumber((prevNumber) => prevNumber - 1);\r\n  }, []);\r\n\r\n  const reset = useCallback((event) => {\r\n    changeRocNumber(3);\r\n    changeSicNumber(3);\r\n    changePapNumber(3);\r\n  }, []);\r\n\r\n  // NOTE 엔터키 입력 시 검색되도록\r\n  const onKeyDown = useCallback(\r\n    (event, type) => {\r\n      if (event.keyCode === 37) return onIncrease(event, \"rock\");\r\n      if (event.keyCode === 40) return onIncrease(event, \"scissors\");\r\n      if (event.keyCode === 39) return onIncrease(event, \"paper\");\r\n      //clear\r\n      if (event.keyCode === 32) return reset(event);\r\n    },\r\n    [onIncrease, reset]\r\n  );\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\r\n  }, [onKeyDown]);\r\n\r\n  return (\r\n    <Container>\r\n      <Wapper>\r\n        <Title>나인하트와 가위바위보</Title>\r\n        <Description>\r\n          ✌는<FocusText>⬅</FocusText>\r\n          ✊는<FocusText>⬇</FocusText>\r\n          ✋는 <FocusText>➡</FocusText> 방향키를 누르세요 space는 초기화!\r\n        </Description>\r\n        <CountArea>\r\n          <CountBox>\r\n            <CountTitle>✌</CountTitle>\r\n            <CountNumber>당신의 ✊횟수는 {rocNumber}</CountNumber>\r\n          </CountBox>\r\n          <CountBox>\r\n            <CountTitle>✊</CountTitle>\r\n            <CountNumber>당신의 ✋횟수는 {sicNumber}</CountNumber>\r\n          </CountBox>\r\n          <CountBox>\r\n            <CountTitle>✋</CountTitle>\r\n            <CountNumber>당신의 ✌횟수는 {papNumber}</CountNumber>\r\n          </CountBox>\r\n        </CountArea>\r\n      </Wapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\nimport Counter from \"./components/Counter\";\n\nconst App = () => {\n  return <Counter />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}